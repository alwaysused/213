        .pos    0
 init:  irmovl  Stack, %esp
        irmovl  Stack, %ebp
        call    Main
        halt

 # Sample linked list 函数操作中需要运用到的数据定义
.align 4
# Source block
src:
.long 0x00a
.long 0x0b0
.long 0xc00
# Destination block
dest:
.long 0x111
.long 0x222
.long 0x333

#定义Main函数，调用sum_list函数
Main:   pushl   %ebp
        rrmovl  %esp,   %ebp
        irmovl  $3 ,  %eax
        pushl   %eax
        irmovl dest,  %eax
        pushl   %eax
        irmovl  src ,  %eax
        pushl   %eax

        call    sumlist
        rrmovl  %ebp , %esp
        popl    %ebp
        ret

# int sum_list(list_ptr ls) 相关sum_list 函数的实现
sumlist:    
        pushl   %ebp
        rrmovl  %esp ,%ebp
        xorl    %eax,%eax       #the return result  = 0
        mrmovl  8(%ebp) , %edx  #src
        mrmovl  12(%ebp),%ebx          #dest
        mrmovl  16(%ebp),%ecx   #len


        andl    %ecx , %ecx     #ls == 0 ?
        je  End                          
Loop:   mrmovl  (%edx) , %esi       #ls->val  ==> %ecx
        rrmovl    %esi , %ebx         #val += ls->val
        xorl      %esi,%eax

        irmovl  $4 , %edi      
        addl    %edi , %edx         #src ++

        addl   %edi,%ebx

        irmovl  $-1 , %edi      
        addl  %edi , %ecx         #ls->next ==>edx
        andl    %ecx , %ecx         #set condition codes
        jne Loop                    #if ls != 0 goto Loop

End:    
mrmovl  8(%ebp) , %edx  #src
        mrmovl  12(%ebp),%ebx          #dest
        mrmovl  16(%ebp),%ecx   #len
rrmovl  %ebp , %esp
        popl    %ebp

        ret     

#定义栈的起始地址
        .pos 0x100
Stack:
