.pos 0
init:
 irmovl Stack, %esp
 irmovl Stack, %ebp
 call Main
 halt

Sum:
pushl %ebp
rrmovl %esp,%ebp
xorl    %eax,%eax
mrmovl 8(%ebp),%edx
andl %edx,%edx
je End
Loop:   mrmovl  (%edx) , %ecx       #ls->val  ==> %ecx
        addl    %ecx , %eax         #val += ls->val
        #irmovl  $4 , %edi      
        #addl    %edi , %edx         #next ==> edx
        mrmovl 4(%edx),  %edx        
        #rrmovl  %esi , %edx         #ls->next ==>edx
        andl    %edx , %edx         #set condition codes
        jne Loop                    #if ls != 0 goto Loop
End:
rrmovl  %ebp , %esp
popl %ebp

ret


.align 4
ele1:
.long 0x00a
.long ele2
ele2:
.long 0x0b0
.long ele3
ele3:
.long 0xc00
.long 0

Main:

pushl   %ebp
        rrmovl  %esp,   %ebp
        irmovl  ele1 ,  %eax
        pushl   %eax
        call    Sum
        rrmovl  %ebp , %esp
        popl    %ebp
        ret


.pos 0x100

Stack:
