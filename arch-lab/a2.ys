.pos 0

init:

 irmovl Stack, %esp

 irmovl Stack, %ebp

 call Main

 halt



Sum:

pushl %ebp

rrmovl %esp,%ebp


mrmovl 8(%ebp),%edx

andl %edx,%edx

je End

mrmovl  (%edx) , %ecx       #ls->val  ==> %ecx
pushl %ecx
 mrmovl 4(%edx),  %edx
 pushl %edx
 call Sum 
        popl %edx
        popl %ecx
        addl    %ecx , %eax        

        jmp End2                   


End:
irmovl $0,%eax


End2:

rrmovl  %ebp , %esp

popl %ebp



ret





.align 4

ele1:

.long 0x00a

.long ele2

ele2:

.long 0x0b0

.long ele3

ele3:

.long 0xc00

.long 0



Main:



pushl   %ebp

        rrmovl  %esp,   %ebp

        irmovl  ele1 ,  %eax

        pushl   %eax

        call    Sum

        rrmovl  %ebp , %esp

        popl    %ebp

        ret





.pos 0x100



Stack:
